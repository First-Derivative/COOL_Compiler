#13 CLASS class
#13 TYPEID A2I
#13 CURLY_OPEN {
#15 OBJECTID c2i
#15 PARENT_OPEN (
#15 OBJECTID char
#15 COLON :
#15 TYPEID String
#15 PARENT_CLOSE )
#15 COLON :
#15 TYPEID Int
#15 CURLY_OPEN {
#16 IF if
#16 OBJECTID char
#16 EQ_OPERATOR =
#16 STRING_CONST 0
#16 THEN then
#16 INT_CONST 0
#16 ELSE else
#17 IF if
#17 OBJECTID char
#17 EQ_OPERATOR =
#17 STRING_CONST 1
#17 THEN then
#17 INT_CONST 1
#17 ELSE else
#18 IF if
#18 OBJECTID char
#18 EQ_OPERATOR =
#18 STRING_CONST 2
#18 THEN then
#18 INT_CONST 2
#18 ELSE else
#19 IF if
#19 OBJECTID char
#19 EQ_OPERATOR =
#19 STRING_CONST 3
#19 THEN then
#19 INT_CONST 3
#19 ELSE else
#20 IF if
#20 OBJECTID char
#20 EQ_OPERATOR =
#20 STRING_CONST 4
#20 THEN then
#20 INT_CONST 4
#20 ELSE else
#21 IF if
#21 OBJECTID char
#21 EQ_OPERATOR =
#21 STRING_CONST 5
#21 THEN then
#21 INT_CONST 5
#21 ELSE else
#22 IF if
#22 OBJECTID char
#22 EQ_OPERATOR =
#22 STRING_CONST 6
#22 THEN then
#22 INT_CONST 6
#22 ELSE else
#23 IF if
#23 OBJECTID char
#23 EQ_OPERATOR =
#23 STRING_CONST 7
#23 THEN then
#23 INT_CONST 7
#23 ELSE else
#24 IF if
#24 OBJECTID char
#24 EQ_OPERATOR =
#24 STRING_CONST 8
#24 THEN then
#24 INT_CONST 8
#24 ELSE else
#25 IF if
#25 OBJECTID char
#25 EQ_OPERATOR =
#25 STRING_CONST 9
#25 THEN then
#25 INT_CONST 9
#25 ELSE else
#26 CURLY_OPEN {
#26 OBJECTID abort
#26 PARENT_OPEN (
#26 PARENT_CLOSE )
#26 SEMICOLON ;
#26 INT_CONST 0
#26 SEMICOLON ;
#26 CURLY_CLOSE }
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#27 FI fi
#28 CURLY_CLOSE }
#28 SEMICOLON ;
#33 OBJECTID i2c
#33 PARENT_OPEN (
#33 OBJECTID i
#33 COLON :
#33 TYPEID Int
#33 PARENT_CLOSE )
#33 COLON :
#33 TYPEID String
#33 CURLY_OPEN {
#34 IF if
#34 OBJECTID i
#34 EQ_OPERATOR =
#34 INT_CONST 0
#34 THEN then
#34 STRING_CONST 0
#34 ELSE else
#35 IF if
#35 OBJECTID i
#35 EQ_OPERATOR =
#35 INT_CONST 1
#35 THEN then
#35 STRING_CONST 1
#35 ELSE else
#36 IF if
#36 OBJECTID i
#36 EQ_OPERATOR =
#36 INT_CONST 2
#36 THEN then
#36 STRING_CONST 2
#36 ELSE else
#37 IF if
#37 OBJECTID i
#37 EQ_OPERATOR =
#37 INT_CONST 3
#37 THEN then
#37 STRING_CONST 3
#37 ELSE else
#38 IF if
#38 OBJECTID i
#38 EQ_OPERATOR =
#38 INT_CONST 4
#38 THEN then
#38 STRING_CONST 4
#38 ELSE else
#39 IF if
#39 OBJECTID i
#39 EQ_OPERATOR =
#39 INT_CONST 5
#39 THEN then
#39 STRING_CONST 5
#39 ELSE else
#40 IF if
#40 OBJECTID i
#40 EQ_OPERATOR =
#40 INT_CONST 6
#40 THEN then
#40 STRING_CONST 6
#40 ELSE else
#41 IF if
#41 OBJECTID i
#41 EQ_OPERATOR =
#41 INT_CONST 7
#41 THEN then
#41 STRING_CONST 7
#41 ELSE else
#42 IF if
#42 OBJECTID i
#42 EQ_OPERATOR =
#42 INT_CONST 8
#42 THEN then
#42 STRING_CONST 8
#42 ELSE else
#43 IF if
#43 OBJECTID i
#43 EQ_OPERATOR =
#43 INT_CONST 9
#43 THEN then
#43 STRING_CONST 9
#43 ELSE else
#44 CURLY_OPEN {
#44 OBJECTID abort
#44 PARENT_OPEN (
#44 PARENT_CLOSE )
#44 SEMICOLON ;
#44 STRING_CONST 
#44 SEMICOLON ;
#44 CURLY_CLOSE }
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#45 FI fi
#46 CURLY_CLOSE }
#46 SEMICOLON ;
#56 OBJECTID a2i
#56 PARENT_OPEN (
#56 OBJECTID s
#56 COLON :
#56 TYPEID String
#56 PARENT_CLOSE )
#56 COLON :
#56 TYPEID Int
#56 CURLY_OPEN {
#57 IF if
#57 OBJECTID s
#57 PERIOD .
#57 OBJECTID length
#57 PARENT_OPEN (
#57 PARENT_CLOSE )
#57 EQ_OPERATOR =
#57 INT_CONST 0
#57 THEN then
#57 INT_CONST 0
#57 ELSE else
#58 IF if
#58 OBJECTID s
#58 PERIOD .
#58 OBJECTID substr
#58 PARENT_OPEN (
#58 INT_CONST 0
#58 COMMA ,
#58 INT_CONST 1
#58 PARENT_CLOSE )
#58 EQ_OPERATOR =
#58 STRING_CONST -
#58 THEN then
#58 INT_COMPLEMENT_OPERATOR ~
#58 OBJECTID a2i_aux
#58 PARENT_OPEN (
#58 OBJECTID s
#58 PERIOD .
#58 OBJECTID substr
#58 PARENT_OPEN (
#58 INT_CONST 1
#58 COMMA ,
#58 OBJECTID s
#58 PERIOD .
#58 OBJECTID length
#58 PARENT_OPEN (
#58 PARENT_CLOSE )
#58 INT_CONST -1
#58 PARENT_CLOSE )
#58 PARENT_CLOSE )
#58 ELSE else
#59 IF if
#59 OBJECTID s
#59 PERIOD .
#59 OBJECTID substr
#59 PARENT_OPEN (
#59 INT_CONST 0
#59 COMMA ,
#59 INT_CONST 1
#59 PARENT_CLOSE )
#59 EQ_OPERATOR =
#59 STRING_CONST +
#59 THEN then
#59 OBJECTID a2i_aux
#59 PARENT_OPEN (
#59 OBJECTID s
#59 PERIOD .
#59 OBJECTID substr
#59 PARENT_OPEN (
#59 INT_CONST 1
#59 COMMA ,
#59 OBJECTID s
#59 PERIOD .
#59 OBJECTID length
#59 PARENT_OPEN (
#59 PARENT_CLOSE )
#59 INT_CONST -1
#59 PARENT_CLOSE )
#59 PARENT_CLOSE )
#59 ELSE else
#60 OBJECTID a2i_aux
#60 PARENT_OPEN (
#60 OBJECTID s
#60 PARENT_CLOSE )
#61 FI fi
#61 FI fi
#61 FI fi
#62 CURLY_CLOSE }
#62 SEMICOLON ;
#68 OBJECTID a2i_aux
#68 PARENT_OPEN (
#68 OBJECTID s
#68 COLON :
#68 TYPEID String
#68 PARENT_CLOSE )
#68 COLON :
#68 TYPEID Int
#68 CURLY_OPEN {
#69 PARENT_OPEN (
#69 LET let
#69 OBJECTID int
#69 COLON :
#69 TYPEID Int
#69 ASSIGN_OPERATOR <-
#69 INT_CONST 0
#69 IN in
#70 CURLY_OPEN {
#71 PARENT_OPEN (
#71 LET let
#71 OBJECTID j
#71 COLON :
#71 TYPEID Int
#71 ASSIGN_OPERATOR <-
#71 OBJECTID s
#71 PERIOD .
#71 OBJECTID length
#71 PARENT_OPEN (
#71 PARENT_CLOSE )
#71 IN in
#72 PARENT_OPEN (
#72 LET let
#72 OBJECTID i
#72 COLON :
#72 TYPEID Int
#72 ASSIGN_OPERATOR <-
#72 INT_CONST 0
#72 IN in
#73 WHILE while
#73 OBJECTID i
#73 LESS_OPERATOR <
#73 OBJECTID j
#73 LOOP loop
#74 CURLY_OPEN {
#75 OBJECTID int
#75 ASSIGN_OPERATOR <-
#75 OBJECTID int
#75 MULT_OPERATOR *
#75 INT_CONST 10
#75 PLUS_OPERATOR +
#75 OBJECTID c2i
#75 PARENT_OPEN (
#75 OBJECTID s
#75 PERIOD .
#75 OBJECTID substr
#75 PARENT_OPEN (
#75 OBJECTID i
#75 COMMA ,
#75 INT_CONST 1
#75 PARENT_CLOSE )
#75 PARENT_CLOSE )
#75 SEMICOLON ;
#76 OBJECTID i
#76 ASSIGN_OPERATOR <-
#76 OBJECTID i
#76 PLUS_OPERATOR +
#76 INT_CONST 1
#76 SEMICOLON ;
#77 CURLY_CLOSE }
#78 POOL pool
#79 PARENT_CLOSE )
#80 PARENT_CLOSE )
#80 SEMICOLON ;
#81 OBJECTID int
#81 SEMICOLON ;
#82 CURLY_CLOSE }
#83 PARENT_CLOSE )
#84 CURLY_CLOSE }
#84 SEMICOLON ;
#90 OBJECTID i2a
#90 PARENT_OPEN (
#90 OBJECTID i
#90 COLON :
#90 TYPEID Int
#90 PARENT_CLOSE )
#90 COLON :
#90 TYPEID String
#90 CURLY_OPEN {
#91 IF if
#91 OBJECTID i
#91 EQ_OPERATOR =
#91 INT_CONST 0
#91 THEN then
#91 STRING_CONST 0
#91 ELSE else
#92 IF if
#92 INT_CONST 0
#92 LESS_OPERATOR <
#92 OBJECTID i
#92 THEN then
#92 OBJECTID i2a_aux
#92 PARENT_OPEN (
#92 OBJECTID i
#92 PARENT_CLOSE )
#92 ELSE else
#93 STRING_CONST -
#93 PERIOD .
#93 OBJECTID concat
#93 PARENT_OPEN (
#93 OBJECTID i2a_aux
#93 PARENT_OPEN (
#93 OBJECTID i
#93 MULT_OPERATOR *
#93 INT_COMPLEMENT_OPERATOR ~
#93 INT_CONST 1
#93 PARENT_CLOSE )
#93 PARENT_CLOSE )
#94 FI fi
#94 FI fi
#95 CURLY_CLOSE }
#95 SEMICOLON ;
#100 OBJECTID i2a_aux
#100 PARENT_OPEN (
#100 OBJECTID i
#100 COLON :
#100 TYPEID Int
#100 PARENT_CLOSE )
#100 COLON :
#100 TYPEID String
#100 CURLY_OPEN {
#101 IF if
#101 OBJECTID i
#101 EQ_OPERATOR =
#101 INT_CONST 0
#101 THEN then
#101 STRING_CONST 
#101 ELSE else
#102 PARENT_OPEN (
#102 LET let
#102 OBJECTID next
#102 COLON :
#102 TYPEID Int
#102 ASSIGN_OPERATOR <-
#102 OBJECTID i
#102 DIV_OPERATOR /
#102 INT_CONST 10
#102 IN in
#103 OBJECTID i2a_aux
#103 PARENT_OPEN (
#103 OBJECTID next
#103 PARENT_CLOSE )
#103 PERIOD .
#103 OBJECTID concat
#103 PARENT_OPEN (
#103 OBJECTID i2c
#103 PARENT_OPEN (
#103 OBJECTID i
#103 MINUS_OPERATOR -
#103 OBJECTID next
#103 MULT_OPERATOR *
#103 INT_CONST 10
#103 PARENT_CLOSE )
#103 PARENT_CLOSE )
#104 PARENT_CLOSE )
#105 FI fi
#106 CURLY_CLOSE }
#106 SEMICOLON ;
#108 CURLY_CLOSE }
#108 SEMICOLON ;
#109 EOF <EOF>
