#24 CLASS Class
#24 TYPEID List
#24 INHERITS inherits
#24 TYPEID IO
#24 CURLY_OPEN {
#28 OBJECTID isNil
#28 PARENT_OPEN (
#28 PARENT_CLOSE )
#28 COLON :
#28 TYPEID Bool
#28 CURLY_OPEN {
#28 CURLY_OPEN {
#28 OBJECTID abort
#28 PARENT_OPEN (
#28 PARENT_CLOSE )
#28 SEMICOLON ;
#28 TRUE true
#28 SEMICOLON ;
#28 CURLY_CLOSE }
#28 CURLY_CLOSE }
#28 SEMICOLON ;
#30 OBJECTID cons
#30 PARENT_OPEN (
#30 OBJECTID hd
#30 COLON :
#30 TYPEID Int
#30 PARENT_CLOSE )
#30 COLON :
#30 TYPEID Cons
#30 CURLY_OPEN {
#31 PARENT_OPEN (
#31 LET let
#31 OBJECTID new_cell
#31 COLON :
#31 TYPEID Cons
#31 ASSIGN_OPERATOR <-
#31 NEW new
#31 TYPEID Cons
#31 IN in
#32 OBJECTID new_cell
#32 PERIOD .
#32 OBJECTID init
#32 PARENT_OPEN (
#32 OBJECTID hd
#32 COMMA ,
#32 OBJECTID self
#32 PARENT_CLOSE )
#33 PARENT_CLOSE )
#34 CURLY_CLOSE }
#34 SEMICOLON ;
#41 OBJECTID car
#41 PARENT_OPEN (
#41 PARENT_CLOSE )
#41 COLON :
#41 TYPEID Int
#41 CURLY_OPEN {
#41 CURLY_OPEN {
#41 OBJECTID abort
#41 PARENT_OPEN (
#41 PARENT_CLOSE )
#41 SEMICOLON ;
#41 NEW new
#41 TYPEID Int
#41 SEMICOLON ;
#41 CURLY_CLOSE }
#41 CURLY_CLOSE }
#41 SEMICOLON ;
#43 OBJECTID cdr
#43 PARENT_OPEN (
#43 PARENT_CLOSE )
#43 COLON :
#43 TYPEID List
#43 CURLY_OPEN {
#43 CURLY_OPEN {
#43 OBJECTID abort
#43 PARENT_OPEN (
#43 PARENT_CLOSE )
#43 SEMICOLON ;
#43 NEW new
#43 TYPEID List
#43 SEMICOLON ;
#43 CURLY_CLOSE }
#43 CURLY_CLOSE }
#43 SEMICOLON ;
#45 OBJECTID rev
#45 PARENT_OPEN (
#45 PARENT_CLOSE )
#45 COLON :
#45 TYPEID List
#45 CURLY_OPEN {
#45 OBJECTID cdr
#45 PARENT_OPEN (
#45 PARENT_CLOSE )
#45 CURLY_CLOSE }
#45 SEMICOLON ;
#47 OBJECTID sort
#47 PARENT_OPEN (
#47 PARENT_CLOSE )
#47 COLON :
#47 TYPEID List
#47 CURLY_OPEN {
#47 OBJECTID cdr
#47 PARENT_OPEN (
#47 PARENT_CLOSE )
#47 CURLY_CLOSE }
#47 SEMICOLON ;
#49 OBJECTID insert
#49 PARENT_OPEN (
#49 OBJECTID i
#49 COLON :
#49 TYPEID Int
#49 PARENT_CLOSE )
#49 COLON :
#49 TYPEID List
#49 CURLY_OPEN {
#49 OBJECTID cdr
#49 PARENT_OPEN (
#49 PARENT_CLOSE )
#49 CURLY_CLOSE }
#49 SEMICOLON ;
#51 OBJECTID rcons
#51 PARENT_OPEN (
#51 OBJECTID i
#51 COLON :
#51 TYPEID Int
#51 PARENT_CLOSE )
#51 COLON :
#51 TYPEID List
#51 CURLY_OPEN {
#51 OBJECTID cdr
#51 PARENT_OPEN (
#51 PARENT_CLOSE )
#51 CURLY_CLOSE }
#51 SEMICOLON ;
#53 OBJECTID print_list
#53 PARENT_OPEN (
#53 PARENT_CLOSE )
#53 COLON :
#53 TYPEID Object
#53 CURLY_OPEN {
#53 OBJECTID abort
#53 PARENT_OPEN (
#53 PARENT_CLOSE )
#53 CURLY_CLOSE }
#53 SEMICOLON ;
#54 CURLY_CLOSE }
#54 SEMICOLON ;
#56 CLASS Class
#56 TYPEID Cons
#56 INHERITS inherits
#56 TYPEID List
#56 CURLY_OPEN {
#57 OBJECTID xcar
#57 COLON :
#57 TYPEID Int
#57 SEMICOLON ;
#58 OBJECTID xcdr
#58 COLON :
#58 TYPEID List
#58 SEMICOLON ;
#62 OBJECTID isNil
#62 PARENT_OPEN (
#62 PARENT_CLOSE )
#62 COLON :
#62 TYPEID Bool
#62 CURLY_OPEN {
#62 FALSE false
#62 CURLY_CLOSE }
#62 SEMICOLON ;
#64 OBJECTID init
#64 PARENT_OPEN (
#64 OBJECTID hd
#64 COLON :
#64 TYPEID Int
#64 COMMA ,
#64 OBJECTID tl
#64 COLON :
#64 TYPEID List
#64 PARENT_CLOSE )
#64 COLON :
#64 TYPEID Cons
#64 CURLY_OPEN {
#65 CURLY_OPEN {
#66 OBJECTID xcar
#66 ASSIGN_OPERATOR <-
#66 OBJECTID hd
#66 SEMICOLON ;
#67 OBJECTID xcdr
#67 ASSIGN_OPERATOR <-
#67 OBJECTID tl
#67 SEMICOLON ;
#68 OBJECTID self
#68 SEMICOLON ;
#69 CURLY_CLOSE }
#70 CURLY_CLOSE }
#70 SEMICOLON ;
#72 OBJECTID car
#72 PARENT_OPEN (
#72 PARENT_CLOSE )
#72 COLON :
#72 TYPEID Int
#72 CURLY_OPEN {
#72 OBJECTID xcar
#72 CURLY_CLOSE }
#72 SEMICOLON ;
#74 OBJECTID cdr
#74 PARENT_OPEN (
#74 PARENT_CLOSE )
#74 COLON :
#74 TYPEID List
#74 CURLY_OPEN {
#74 OBJECTID xcdr
#74 CURLY_CLOSE }
#74 SEMICOLON ;
#76 OBJECTID rev
#76 PARENT_OPEN (
#76 PARENT_CLOSE )
#76 COLON :
#76 TYPEID List
#76 CURLY_OPEN {
#76 PARENT_OPEN (
#76 OBJECTID xcdr
#76 PERIOD .
#76 OBJECTID rev
#76 PARENT_OPEN (
#76 PARENT_CLOSE )
#76 PARENT_CLOSE )
#76 PERIOD .
#76 OBJECTID rcons
#76 PARENT_OPEN (
#76 OBJECTID xcar
#76 PARENT_CLOSE )
#76 CURLY_CLOSE }
#76 SEMICOLON ;
#78 OBJECTID sort
#78 PARENT_OPEN (
#78 PARENT_CLOSE )
#78 COLON :
#78 TYPEID List
#78 CURLY_OPEN {
#78 PARENT_OPEN (
#78 OBJECTID xcdr
#78 PERIOD .
#78 OBJECTID sort
#78 PARENT_OPEN (
#78 PARENT_CLOSE )
#78 PARENT_CLOSE )
#78 PERIOD .
#78 OBJECTID insert
#78 PARENT_OPEN (
#78 OBJECTID xcar
#78 PARENT_CLOSE )
#78 CURLY_CLOSE }
#78 SEMICOLON ;
#80 OBJECTID insert
#80 PARENT_OPEN (
#80 OBJECTID i
#80 COLON :
#80 TYPEID Int
#80 PARENT_CLOSE )
#80 COLON :
#80 TYPEID List
#80 CURLY_OPEN {
#81 IF if
#81 OBJECTID i
#81 LESS_OPERATOR <
#81 OBJECTID xcar
#81 THEN then
#82 PARENT_OPEN (
#82 NEW new
#82 TYPEID Cons
#82 PARENT_CLOSE )
#82 PERIOD .
#82 OBJECTID init
#82 PARENT_OPEN (
#82 OBJECTID i
#82 COMMA ,
#82 OBJECTID self
#82 PARENT_CLOSE )
#83 ELSE else
#84 PARENT_OPEN (
#84 NEW new
#84 TYPEID Cons
#84 PARENT_CLOSE )
#84 PERIOD .
#84 OBJECTID init
#84 PARENT_OPEN (
#84 OBJECTID xcar
#84 COMMA ,
#84 OBJECTID xcdr
#84 PERIOD .
#84 OBJECTID insert
#84 PARENT_OPEN (
#84 OBJECTID i
#84 PARENT_CLOSE )
#84 PARENT_CLOSE )
#85 FI fi
#86 CURLY_CLOSE }
#86 SEMICOLON ;
#89 OBJECTID rcons
#89 PARENT_OPEN (
#89 OBJECTID i
#89 COLON :
#89 TYPEID Int
#89 PARENT_CLOSE )
#89 COLON :
#89 TYPEID List
#89 CURLY_OPEN {
#89 PARENT_OPEN (
#89 NEW new
#89 TYPEID Cons
#89 PARENT_CLOSE )
#89 PERIOD .
#89 OBJECTID init
#89 PARENT_OPEN (
#89 OBJECTID xcar
#89 COMMA ,
#89 OBJECTID xcdr
#89 PERIOD .
#89 OBJECTID rcons
#89 PARENT_OPEN (
#89 OBJECTID i
#89 PARENT_CLOSE )
#89 PARENT_CLOSE )
#89 CURLY_CLOSE }
#89 SEMICOLON ;
#91 OBJECTID print_list
#91 PARENT_OPEN (
#91 PARENT_CLOSE )
#91 COLON :
#91 TYPEID Object
#91 CURLY_OPEN {
#92 CURLY_OPEN {
#93 OBJECTID out_int
#93 PARENT_OPEN (
#93 OBJECTID xcar
#93 PARENT_CLOSE )
#93 SEMICOLON ;
#94 OBJECTID out_string
#94 PARENT_OPEN (
#94 STRING_CONST 

#94 PARENT_CLOSE )
#94 SEMICOLON ;
#95 OBJECTID xcdr
#95 PERIOD .
#95 OBJECTID print_list
#95 PARENT_OPEN (
#95 PARENT_CLOSE )
#95 SEMICOLON ;
#96 CURLY_CLOSE }
#97 CURLY_CLOSE }
#97 SEMICOLON ;
#98 CURLY_CLOSE }
#98 SEMICOLON ;
#100 CLASS Class
#100 TYPEID Nil
#100 INHERITS inherits
#100 TYPEID List
#100 CURLY_OPEN {
#101 OBJECTID isNil
#101 PARENT_OPEN (
#101 PARENT_CLOSE )
#101 COLON :
#101 TYPEID Bool
#101 CURLY_OPEN {
#101 TRUE true
#101 CURLY_CLOSE }
#101 SEMICOLON ;
#103 OBJECTID rev
#103 PARENT_OPEN (
#103 PARENT_CLOSE )
#103 COLON :
#103 TYPEID List
#103 CURLY_OPEN {
#103 OBJECTID self
#103 CURLY_CLOSE }
#103 SEMICOLON ;
#105 OBJECTID sort
#105 PARENT_OPEN (
#105 PARENT_CLOSE )
#105 COLON :
#105 TYPEID List
#105 CURLY_OPEN {
#105 OBJECTID self
#105 CURLY_CLOSE }
#105 SEMICOLON ;
#107 OBJECTID insert
#107 PARENT_OPEN (
#107 OBJECTID i
#107 COLON :
#107 TYPEID Int
#107 PARENT_CLOSE )
#107 COLON :
#107 TYPEID List
#107 CURLY_OPEN {
#107 OBJECTID rcons
#107 PARENT_OPEN (
#107 OBJECTID i
#107 PARENT_CLOSE )
#107 CURLY_CLOSE }
#107 SEMICOLON ;
#109 OBJECTID rcons
#109 PARENT_OPEN (
#109 OBJECTID i
#109 COLON :
#109 TYPEID Int
#109 PARENT_CLOSE )
#109 COLON :
#109 TYPEID List
#109 CURLY_OPEN {
#109 PARENT_OPEN (
#109 NEW new
#109 TYPEID Cons
#109 PARENT_CLOSE )
#109 PERIOD .
#109 OBJECTID init
#109 PARENT_OPEN (
#109 OBJECTID i
#109 COMMA ,
#109 OBJECTID self
#109 PARENT_CLOSE )
#109 CURLY_CLOSE }
#109 SEMICOLON ;
#111 OBJECTID print_list
#111 PARENT_OPEN (
#111 PARENT_CLOSE )
#111 COLON :
#111 TYPEID Object
#111 CURLY_OPEN {
#111 TRUE true
#111 CURLY_CLOSE }
#111 SEMICOLON ;
#113 CURLY_CLOSE }
#113 SEMICOLON ;
#116 CLASS Class
#116 TYPEID Main
#116 INHERITS inherits
#116 TYPEID IO
#116 CURLY_OPEN {
#118 OBJECTID l
#118 COLON :
#118 TYPEID List
#118 SEMICOLON ;
#121 OBJECTID iota
#121 PARENT_OPEN (
#121 OBJECTID i
#121 COLON :
#121 TYPEID Int
#121 PARENT_CLOSE )
#121 COLON :
#121 TYPEID List
#121 CURLY_OPEN {
#122 CURLY_OPEN {
#123 OBJECTID l
#123 ASSIGN_OPERATOR <-
#123 NEW new
#123 TYPEID Nil
#123 SEMICOLON ;
#124 PARENT_OPEN (
#124 LET let
#124 OBJECTID j
#124 COLON :
#124 TYPEID Int
#124 ASSIGN_OPERATOR <-
#124 INT_CONST 0
#124 IN in
#125 WHILE while
#125 OBJECTID j
#125 LESS_OPERATOR <
#125 OBJECTID i
#126 LOOP loop
#127 CURLY_OPEN {
#128 OBJECTID l
#128 ASSIGN_OPERATOR <-
#128 PARENT_OPEN (
#128 NEW new
#128 TYPEID Cons
#128 PARENT_CLOSE )
#128 PERIOD .
#128 OBJECTID init
#128 PARENT_OPEN (
#128 OBJECTID j
#128 COMMA ,
#128 OBJECTID l
#128 PARENT_CLOSE )
#128 SEMICOLON ;
#129 OBJECTID j
#129 ASSIGN_OPERATOR <-
#129 OBJECTID j
#129 PLUS_OPERATOR +
#129 INT_CONST 1
#129 SEMICOLON ;
#130 CURLY_CLOSE }
#131 POOL pool
#132 PARENT_CLOSE )
#132 SEMICOLON ;
#133 OBJECTID l
#133 SEMICOLON ;
#134 CURLY_CLOSE }
#135 CURLY_CLOSE }
#135 SEMICOLON ;
#137 OBJECTID main
#137 PARENT_OPEN (
#137 PARENT_CLOSE )
#137 COLON :
#137 TYPEID Object
#137 CURLY_OPEN {
#138 CURLY_OPEN {
#139 OBJECTID out_string
#139 PARENT_OPEN (
#139 STRING_CONST How many numbers to sort?
#139 PARENT_CLOSE )
#139 SEMICOLON ;
#140 OBJECTID iota
#140 PARENT_OPEN (
#140 OBJECTID in_int
#140 PARENT_OPEN (
#140 PARENT_CLOSE )
#140 PARENT_CLOSE )
#140 PERIOD .
#140 OBJECTID rev
#140 PARENT_OPEN (
#140 PARENT_CLOSE )
#140 PERIOD .
#140 OBJECTID sort
#140 PARENT_OPEN (
#140 PARENT_CLOSE )
#140 PERIOD .
#140 OBJECTID print_list
#140 PARENT_OPEN (
#140 PARENT_CLOSE )
#140 SEMICOLON ;
#141 CURLY_CLOSE }
#142 CURLY_CLOSE }
#142 SEMICOLON ;
#143 CURLY_CLOSE }
#143 SEMICOLON ;
#149 EOF <EOF>
